name: pr

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - run: echo "RUST_TOOLCHAIN=$(just rust-version)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: debug-build
      - name: Test
        run: just test
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/install-action@v2
        with:
          tool: just
      - run: |
          echo "RUST_TOOLCHAIN=$(just rust-version)" >> $GITHUB_ENV
          echo "RUST_TOOLCHAIN_NIGHTLY=$(just rust-nightly-version)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN_NIGHTLY }}
          components: rustfmt
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: debug-build-nightly
      - name: Lint
        run: just lint "strict"
  msrv-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: taiki-e/install-action@v2
        with:
          tool: just, cargo-binstall
      - run: echo "RUST_TOOLCHAIN=$(just rust-version)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - run: |
          cargo binstall cargo-msrv
          just verify-msrv
